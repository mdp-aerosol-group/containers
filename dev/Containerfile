FROM registry.fedoraproject.org/fedora:38

ENV NAME=fedora-toolbox VERSION=38
LABEL com.github.containers.toolbox="true" \
      com.redhat.component="$NAME" \
      name="$NAME" \
      version="$VERSION" \
      usage="This image is meant to be used with the distrobox command" \
      summary="Julia development container for the mdp-aerosol-group" \
      maintainer="Markus Petters <mdpetter@ncsu.edu>"

COPY README.md /

RUN sed -i '/tsflags=nodocs/d' /etc/dnf/dnf.conf
RUN dnf -y swap coreutils-single coreutils-full

RUN rpm --import https://packages.microsoft.com/keys/microsoft.asc
RUN sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'

RUN dnf -y install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-`rpm -E %fedora`.noarch.rpm

COPY missing-docs /
RUN dnf -y reinstall $(<missing-docs)
RUN rm /missing-docs

COPY extra-packages /
RUN dnf -y install $(<extra-packages)
RUN rm /extra-packages

RUN dnf -y config-manager --set-enabled google-chrome && \
    dnf -y install google-chrome-stable

ENV JULIA_VERSION=1.9.1

# Download and install julia version
RUN mkdir /opt/julia-${JULIA_VERSION} && \
    cd /tmp && \
    wget -q https://julialang-s3.julialang.org/bin/linux/x64/`echo ${JULIA_VERSION} | cut -d. -f 1,2`/julia-${JULIA_VERSION}-linux-x86_64.tar.gz && \
    tar xzf julia-${JULIA_VERSION}-linux-x86_64.tar.gz -C /opt/julia-${JULIA_VERSION} --strip-components=1 && \
    rm /tmp/julia-${JULIA_VERSION}-linux-x86_64.tar.gz
RUN ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia

# Patch libstdc++ of julia 1.8.1. to allow compilation of GMT.jl
RUN cp /usr/lib64/libstdc++.so.6 /opt/julia-${JULIA_VERSION}/lib/julia/libstdc++.so	

# GMT.jl needs libgmt and requires generic lib 
RUN ln -s /usr/lib64/libgmt.so.6 /usr/lib64/libgmt.so

# Install yarn (needed for MarkdownPreview plugin)
RUN npm install --global yarn

# Install AIOMFAC model
RUN git clone https://github.com/andizuend/AIOMFAC.git && \
    cd AIOMFAC/FortranCode/ && \
    make && \
    cp AIOMFAC-web.out /usr/bin/AIOMFAC && \
    cd ../../ 

RUN pip install trash-cli jupyter

# Install PartMC model
RUN git clone https://github.com/compdyn/partmc.git && \
    mkdir /build && \
    cd /build && \
    cmake -D CMAKE_BUILD_TYPE=release \
          -D CMAKE_C_FLAGS_RELEASE="-O2 -g -Werror -Wall -Wextra" \
          -D CMAKE_Fortran_FLAGS_RELEASE="-O2 -g -Werror -fimplicit-none -Wall -Wextra -Wconversion -Wunderflow -Wimplicit-interface -Wno-compare-reals -Wno-unused -Wno-unused-parameter -Wno-unused-dummy-argument -fbounds-check" \
          -D ENABLE_GSL:BOOL=TRUE \
          /partmc && \
     make && \
     cp partmc /usr/bin/partmc

# Install DALES model
RUN git clone https://github.com/dalesteam/dales.git && \ 
    ln -s /usr/lib64/openmpi/bin/mpif90 /usr/bin/mpif90 && \
    mkdir -p /dales/build && \
    cd /dales/build && \
    cmake /dales && \
    make -j && \  
    ln -s /dales/build/src/dales4.4 /usr/bin/dales

RUN touch /etc/localtime

RUN dnf clean all
